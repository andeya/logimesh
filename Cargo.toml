[package]
name = "logimesh"
description = "logimesh is a Rust microservice 2.0 framework."
documentation = "https://docs.rs/logimesh"
readme.workspace = true
version.workspace = true
rust-version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
categories.workspace = true
keywords.workspace = true

[lib]
path = "src/lib.rs"    # The source file of the target.
test = true            # Is tested by default.
doctest = true         # Documentation examples are tested by default.
bench = true           # Is benchmarked by default.
doc = true             # Is documented by default.
proc-macro = false     # Set to `true` for a proc-macro library.
harness = true         # Use libtest harness.
crate-type = ["lib"]   # The crate types to generate.
required-features = [] # Features required to build this target (N/A for lib).

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
tarpc = { workspace = true, features = ["full"] }
logimesh-macro = { workspace = true, features = ["serde1"] }
serde = { workspace = true, features = ["derive"] }
anyhow = { workspace = true }
pin-project-lite = { workspace = true }
futures-core = { workspace = true }
futures-util = { workspace = true, features = ["alloc"] }
async-broadcast = { workspace = true }
socket2 = { workspace = true, features = ["all"] }
tokio = { workspace = true, features = [
    "full",
    "test-util",
    "tracing",
    "rt-multi-thread",
    "macros",
] }
thiserror = { workspace = true }

[dev-dependencies]
serde = { workspace = true, features = ["derive"] }
anyhow = { workspace = true }
futures = { workspace = true }
tokio = { workspace = true, features = [
    "full",
    "test-util",
    "tracing",
    "rt-multi-thread",
    "macros",
] }
assert_matches = { workspace = true }
bincode = { workspace = true }
bytes = { version = "1", features = ["serde"] }
flate2 = { workspace = true }
futures-test = { workspace = true }
opentelemetry = { workspace = true, default-features = false }
opentelemetry-otlp = { workspace = true }
opentelemetry_sdk = { workspace = true, features = ["rt-tokio"] }
opentelemetry-semantic-conventions = { workspace = true }
tracing-opentelemetry = { workspace = true }
tracing = { workspace = true, features = ["attributes", "log"] }
pin-utils = { workspace = true }
serde_bytes = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
console-subscriber = { workspace = true }
tokio-serde = { workspace = true, features = ["json", "bincode"] }
trybuild = { workspace = true }
tokio-rustls = { workspace = true }
rustls-pemfile = { workspace = true }


[features]
default = []
full = ["serde-transport-messagepack", "serde-transport-cbor"]
serde-transport-messagepack = ["tokio-serde/messagepack"]
serde-transport-cbor = ["tokio-serde/cbor"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]
resolver = "2"
members = ["logimesh-macro", "logimesh-example"]

[workspace.package]
version = "0.1.3"
edition = "2021"
authors = ["Andeya Lee <andeyalee@outlook.com>"]
license = "MIT"
rust-version = "1.80.1"
homepage = "https://github.com/andeya/logimesh"
repository = "https://github.com/andeya/logimesh"
readme = "README.md"
categories = ["asynchronous", "network-programming", "web-programming"]
keywords = ["rpc", "server", "api", "microservices", "servicemesh"]

[workspace.dependencies]

logimesh-macro = { version = "0.1", path = "./logimesh-macro" }
logimesh = { path = "./" }

# all dependencies

tarpc = { package = "tarpc-copy", version = "=0.34.0-copy.f81ddd6" }
async-broadcast = "0.7"
proc-macro2 = "1.0"
quote = "1.0"
syn = "2.0.74"
anyhow = "1.0"
fnv = "1.0"
futures = "0.3.22"
futures-core = "0.3.22"
futures-util = { version = "0.3.22", default-features = false }
pin-project-lite = "0.2.7"
humantime = "2.0"
pin-project = "1.0"
rand = "0.8"
serde = "1.0"
static_assertions = "1.1.0"
thiserror = "1.0"
tokio = "1"
tokio-util = "0.7.3"
tokio-serde = "0.9"
tracing = { version = "0.1", default-features = false }
tracing-opentelemetry = { version = "0.25.0", default-features = false }
opentelemetry = { version = "0.24.0", default-features = false }
opentelemetry-semantic-conventions = "0.16.0"
socket2 = "0.5"

# only for dev-dependencies
assert-type-eq = "0.1.0"
clap = { version = "4.4.18" }
log = "0.4"
opentelemetry-otlp = "0.17.0"
tracing-subscriber = { version = "0.3" }
opentelemetry_sdk = { version = "0.24.1" }
assert_matches = "1.4"
bincode = "1.3"
bytes = { version = "1", features = ["serde"] }
flate2 = "1.0"
futures-test = "0.3"
pin-utils = "0.1.0"
serde_bytes = "0.11"
console-subscriber = "0.2"
trybuild = "1.0"
tokio-rustls = "0.25"
rustls-pemfile = "2.0"

[profile.dev]
split-debuginfo = "unpacked"
